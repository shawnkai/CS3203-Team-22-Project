1 - Select procedure, Calls
variable v; procedure p, q;
Select p such that Calls(p, q) with q.procName = "test1" such that Modifies(p, v)
Example, test2
5000
2 - Select boolean, calls

Select BOOLEAN such that Calls("Example", "test1") and Calls("Example", "Shift") and Calls("Example", "test2")
TRUE
5000
3 - Select boolean, next

Select BOOLEAN such that Next(1,2) and Next(2,3) and Next(3, 4) and Next (4, 14)
TRUE
5000
4 - Select boolean, next, false

Select BOOLEAN such that Next(1,2) and Next(2,3) and Next(3, 4) and Next (1, 3)
FALSE
5000
5 - Select tuple
procedure p, q;
Select <p, q> such that Calls(p, q)
Example test1, Example Shift, Example test2, test2 test1
5000
6 - Select Multiple Calls Clauses Using "and"
procedure p;
Select p such that Calls(p, "test1") and Calls(p, "test2")
Example
5000
7 - Select Multiple Uses Clauses Using "and"
variable v;
Select v such that Uses("Example", v) and Uses("test1", v)
none
5000
8 - Select Multiple Pattern Clauses Using "and"
assign a;
Select a pattern a ("x", _) and a (_, _"x"_)
5
5000
9 - Select if pattern such that next relationship holds
if i;
Select i pattern i ("x", _, _) such that Next (i, 9)
7
5000
10 - Select while pattern such that next relationship holds
while w;
Select w pattern w ("w", _) such that Next (w, 21)
20
5000
11 - Select while pattern such that it modifies variable modified by called procedure
while w;
Select w pattern w ("w", _) such that Modifies (w, "left")
20
5000
12 - Select assignment pattern such that it is next to an if statement
if i; assign a;
Select a such that Next(i, a)
8, 9
5000
13 - Select assignment pattern such that it is next to an if statement
if i; assign a;
Select <i, a> such that Next(i, a)
7 8, 7 9
5000
13 - Select All Variables Used and Modified in Procedure "Example"
variable v;
Select v such that Uses("Procedure", v) and Modifies("Procedure", v)
x, z, i
5000
14 - Select All Variables Used and Modified in Procedure "Shift"
variable v;
Select v such that Uses("Shift", v) and Modifies("Shift", v)
none
5000
15 - Select All Statements Who Are Parents of Line 6
stmt s;
Select s such that Parent(s, 6)
5
5000
16 - Select All Statements Who Follow Line 6
stmt s;
Select s such that Follows(6, s)
7, 11, 12, 13
5000
17 - Select All Statements Who Follow Line 6 and Are Parent of Line 6
stmt s;
Select s such that Follows(6, s) and Parent(s, 6)
none
5000
18 - Select All Variables Used and Printed In The Program
print p, assign a, variable v, stmt s;
Select v such that Uses(p, v) and Uses(a, v) and Uses(s, v)
none
5000
19 - Select All Variables Modified and Read In The Program
read r, assign a, variable v, stmt s;
Select v such that Modifies(r, v) and Modifies(a, v) and Modifies(s, v)
none
5000
20 - Select All Variables Being Modified and Used In Line 7 If Statement Container
variable v, stmt s;
Select v such that Modifies(s, v) and Uses(s, v) and Parent(7, s)
z, x
5000
21 - Select if such that it has x as a control variable and is before an assignment that modifies z and uses x and after a while that has i as a control variable
if i; assign a; while w;
Select i such that Next(i, a) pattern i("x", _, _) and i(_, _, _) such that Modifies(a, "z") such that Uses(a, "x") pattern w("i", _)
7
5000
22 - Select boolean, calls
procedure proc, proc1;
Select BOOLEAN with proc.procName = "Example" such that Calls*(proc, proc1) with proc1.procName = "test1"
TRUE
5000
