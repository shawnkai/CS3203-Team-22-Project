procedure A {
  x = 2; 
  z = 3; 
  a = 1; 
  b = 0; 
  i = 5; 
  while (i!=0) { 
    x = x - 7; 
    if (x==1) then {
      x = x + 8; 
      if (x==1) then { 
        x = x + y; 
        read a;
        read x;
        print x;
        if (x==1) then { 
          print b; 
          read b; } 
        else {
          x = x + 9; }} 
      else {
        x = x + 11; }} 
    else {
      y = z + x;} 
    z = z + 23 + x + i + 12; 
    read y;
    i = i + 13;}
  print b; 
  if (x<0) then { 
    call A;
    while (i>0) {
      a = z * 14 + 16 * y; 
      while (i>1) { 
        while (i>2) { 
          if (i<3) then { 
            print b; } 
          else {
            y = y + 1; 
            call B; }   
          i = 25 + 27 + i + 17;	
          read b;
          }
        x = x + 19 + 21; 
        }
      }
    z = x + z;
    }
  else {
    z = 1;
  }
} 

procedure B {
  x = 2; 
  z = 3; 
  a = 1; 
  b = 0; 
  i = 5; 
  while (i!=0) { 
    x = x - 7; 
    if (x==1) then {
      x = x + 8; 
      if (x==1) then { 
        x = x + y; 
        read a;
        read x;
        print x;
        if (x==1) then { 
          print b; 
          read b; } 
        else {
          x = x + 9; }} 
      else {
        x = x + 11; }} 
    else {
      y = z + x;} 
    z = z + 23 + x + i + 12; 
    read y;
    i = i + 13;}
  print b; 
  if (x<0) then { 
    while (i>0) {
      a = z * 14 + 16 * y; 
      while (i>1) { 
        while (i>2) { 
          if (i<3) then { 
            print b; } 
          else {
            y = y + 1; }   
          i = 25 + 27 + i + 17;	
          read b;
          }
        x = x + 19 + 21; 
        }
      }
    z = x + z;
    }
  else {
    z = 1;
  }
  call C;
} 

procedure C {
  x = 2; 
  z = 3; 
  a = 1; 
  b = 0; 
  i = 5; 
  while (i!=0) { 
    x = x - 7; 
    if (x==1) then {
      x = x + 8; 
      if (x==1) then { 
        x = x + y; 
        read a;
        read x;
        print x;
        if (x==1) then { 
          print b; 
          read b; } 
        else {
          x = x + 9; }} 
      else {
        x = x + 11; }} 
    else {
      y = z + x;} 
    z = z + 23 + x + i + 12; 
    read y;
    i = i + 13;}
  print b; 
  if (x<0) then { 
    while (i>0) {
      a = z * 14 + 16 * y; 
      while (i>1) { 
        while (i>2) { 
          if (i<3) then { 
            print b; } 
          else {
            y = y + 1; }   
          i = 25 + 27 + i + 17;	
          read b;
          }
        x = x + 19 + 21; 
        }
      }
    z = x + z;
    }
  else {
    z = 1;
  }
} 
}

procedure D {
  x = 2;
  z = 3; 
  a = 1; 
  b = 0; 
  i = 5; 
  while (i!=0) { 
    x = x - 1; 
    call e;
    if (x==1) then { 
      z = x + 1;  
      if (x==1) then { 
        z = x + 1; 
        if (x==1) then { 
          read b; } 
        else {
          x = x + 1; }} 
      else {
        x = x + 1; }} 
    else {
      y = z + x; } 
    z = z + x + i; 
    i = i - 1; 
    print b; 
    }
}

procedure e {
  x = 2;
  z = 3; 
  a = 1; 
  b = 0; 
  call f;
  i = 5; 
  while (i!=0) { 
    x = x - 1; 
    if (x==1) then { 
      z = x + 1;  
      if (x==1) then { 
        z = x + 1; 
        if (x==1) then { 
          read b; } 
        else {
          x = x + 1; }} 
      else {
        x = x + 1; }} 
    else {
      y = z + x; } 
    z = z + x + i; 
    i = i - 1; 
    print b; }} 

procedure f {
  x = 2;
  z = 3; 
  a = 1; 
  b = 0; 
  i = 5; 
  while (i!=0) { 
    call D;
    x = x - 1; 
    if (x==1) then { 
      z = x + 1;  
      if (x==1) then { 
        z = x + 1; 
        if (x==1) then { 
          read b; } 
        else {
          x = x + 1; }} 
      else {
        x = x + 1; }} 
    else {
      y = z + x; } 
    z = z + x + i; 
    i = i - 1; 
    print b; }} 

procedure g {
 x = 1;
 print y;
 while (z>2) {
   read z;
   print k;
   if (a < 2) then {
     read y;
   } else {
     k = k + 1;
     while (b <= 6) {
       read a;
       while (c > 3) {
         if (d > a) then {
           z = 1;
           call g;
         } else {
           print z;
           read b;
         }
       }
     }
   }
   y = a - 1;
 }
  if (z > 1) then {
    read k;
  } else {
    while (x > 2) {
      z = 5;
    }
    while (y <= 9) {
      print y;
      print x;
      if (a > 5) then {
         while (a >6) {
            a = a + 1;
            print a;
            while (z > 3) {
               read z;
               call h;
            }
         }
       } else {
           j = j + 1;
       }
     }  
  }
 read z;
}


procedure h {
 x = 1;
 print y;
 while (z>2) {
   read z;
   print k;
   if (a < 2) then {
     read y;
   } else {
     k = k + 1;
     while (b <= 6) {
       read a;
       while (c > 3) {
         if (d > a) then {
           z = 1;
         } else {
           print z;
           read b;
         }
       }
     }
   }
   y = a - 1;
 }
  if (z > 1) then {
    call g;
    read k;
  } else {
    while (x > 2) {
      z = 5;
    }
    while (y <= 9) {
      print y;
      print x;
      if (a > 5) then {
         while (a >6) {
            a = a + 1;
            print a;
            while (z > 3) {
               read z;
            }
         }
       } else {
           j = j + 1;
       }
     }  
  }
 read z;
}
